plugins {
    id "com.android.application"
    id "kotlin-android"
    id "kotlin-kapt"
    id "com.google.gms.google-services"
}

android {
    compileSdkVersion builds.compile_sdk
    defaultConfig {
        applicationId "wee.digital.sample"
        minSdkVersion builds.min_sdk
        targetSdkVersion builds.target_sdk
        versionCode builds.version_code
        versionName builds.version_name
        vectorDrawables.useSupportLibrary true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    flavorDimensions "default"
    testOptions {
        unitTests.includeAndroidResources = true
        unitTests.returnDefaultValues = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
    signingConfigs {
        release {
        }
    }
    buildTypes {
        all {
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
        }
        release {
            signingConfig signingConfigs.release
            debuggable true
            minifyEnabled true
            shrinkResources true
        }
        debug {
            debuggable true
            minifyEnabled false
            shrinkResources false
        }
    }
    productFlavors {
        all { flavor ->
            println "Root project: ${project.rootProject}"
            println "Root Dir: ${project.rootDir}"
            task("${flavor.name}GoogleServices", type: Copy) {
                description = 'Switches to google-services.json depending on flavor'
                from "src/${flavor.name}"
                include "google-services.json"
                into "."
            }
        }
        dev {
            resValue "string", "app_name", "Sample Dev"
            applicationIdSuffix ".dev"
        }
        prod {
            resValue "string", "app_name", "Sample"
        }
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ["libs"]
        }
    }
    buildFeatures {
        viewBinding = true
    }
    androidResources {
        noCompress 'tflite'
    }
}

dependencies {

    implementation fileTree(include: ["*.jar", "*aar"], dir: "libs")

    //Utils lib
    implementation project(":library")

    //Widgets lib
    implementation project(":widget")

    //Camera
    implementation project(":camera")

    //Kotlin
    implementation deps.kotlin.stdlib
    // concurrency pattern
    implementation deps.kotlin.coroutines_core
    implementation deps.kotlin.coroutines_android

    //Android
    implementation deps.android.activity
    implementation deps.android.animation
    implementation deps.android.annotation
    implementation deps.android.appcompat
    implementation deps.android.browser
    implementation deps.android.cardview
    implementation deps.android.constraintlayout
    implementation deps.android.corektx
    implementation deps.android.fragment
    implementation deps.android.multidex
    implementation deps.android.recyclerview
    implementation deps.android.security
    implementation deps.android.swiperefreshlayout
    implementation deps.android.vectordrawable
    implementation deps.android.viewpager

    //Google
    implementation deps.google.material
    implementation deps.google.gson

    //Fragment navigation
    implementation deps.navigation.fragment
    implementation deps.navigation.ui

    //Paging recycler view adapter
    implementation deps.paging.runtime

    //Android lifecycle aware
    implementation deps.lifecycle.runtime
    implementation deps.lifecycle.viewmodel
    implementation deps.lifecycle.livedata
    kapt deps.lifecycle.compiler

    //SQLite database orm
    implementation deps.room.runtime
    annotationProcessor deps.room.compiler
    kapt deps.room.compiler

    //Http client, RestFUL api
    implementation deps.square.retrofit
    implementation deps.square.gson
    implementation deps.square.okhttp
    implementation deps.square.okhttp_log
    implementation deps.square.okhttp_url

    //Dimension resources
    implementation deps.dimens.sdp
    implementation deps.dimens.ssp

    //Firebase sdk
    implementation platform(deps.firebase.bom)
    implementation deps.firebase.analytics
    implementation deps.firebase.auth
    implementation deps.firebase.database
    implementation deps.firebase.firestore
    implementation deps.firebase.storage
    implementation deps.firebase.messaging

    //Rounded/oval image view
    implementation deps.rounded_image_view

    //Camera
    implementation deps.ml.camera

    //MediaPipe Face Detection Solution.
    implementation 'com.google.mediapipe:solution-core:latest.release'
    implementation 'com.google.mediapipe:facedetection:latest.release'
    implementation 'com.google.mediapipe:facemesh:latest.release'

    //RealSense camera
    implementation "com.intel.realsense:librealsense:2.49.0@aar"
}

afterEvaluate {
    android.productFlavors.all {
        flavor ->
            tasks."generate${flavor.name.capitalize()}DebugResources".dependsOn "${flavor.name}GoogleServices"
            tasks."generate${flavor.name.capitalize()}ReleaseResources".dependsOn "${flavor.name}GoogleServices"
    }
}

apply plugin: "com.google.gms.google-services"